<!DOCTYPE html>
<html lang="en">

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==" crossorigin="" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js" integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==" crossorigin=""></script>
</head>

<body>
    <div id="content">
      <div id="overlay">
        <div class="infobox" id="infobox">
          <div class="infoclose">
            <p onclick="closeInfobox()" style="cursor:default;display:inline">
              &#10006;</p>
          </div>
          <span>
            <h1 style="color:white">
              Parkour Spot Map,
            </h1>
            <h3 style="color:white">
              created by <a href="https://discordapp.com/users/191295995546435584/" target="_blank">Shaun</a>
            </h3>
          </span>
          <span>
            <p style="color:white">
              <i>
                To add a new spot, click anywhere on the map. All new spots (will soon) require approval.
              </i>
            </p>
          </span>
        </div>
        <div class="infoopen" id="infoopen" style="display:none">
            <button id="openbutton" onclick="openInfobox()" style="cursor:default">
              &#8505;
            </button>
          </div>
      </div>
      <div id="mapid"></div>
      <script>
          function closeInfobox() {
            var box = document.getElementById("infobox");
            box.style.display = "none";
            
            var open = document.getElementById("infoopen");
            open.style.display = "inline";
          }
        
          function openInfobox() {
            var open = document.getElementById("infoopen");
            open.style.display = "none";
            
            var box = document.getElementById("infobox");
            box.style.display = "inline";
          }
          
          //This is the popup when you add a new spot
          var saveSpotTemplate =
              '<form id="popup-form">\
              <input name="spotname" class="spotname" id="spotname" placeholder="Name" size="30"/><br>\
              <textarea name="desc" class="desc" id="desc" placeholder="Description" cols="30"></textarea><br>\
              <button type="button" class="save-button">Save</button>\
              <button type="button" class="delete-button">Delete</button></form>\
              ';

          var bounds = [
            [-90, -180],
            [90, 180]
          ]

          var map = L.map("mapid", {
            'center': [<%- lat %>, <%- lng %>],
            'zoom': <%- zoom %>,
            'minZoom': 3,
            'maxBounds': bounds,
            'maxBoundsViscosity': 1
          });
          var description = "";
          var noMarker = true;
          var marker = [];
          var sporcle = <%- sporcle %>; //Imports markers from db
          var accessToken = "pk.eyJ1IjoiZG9taW5vNTY2IiwiYSI6ImNrbTluZGkzaDFpZHgyb3F0cW1la3ZraHQifQ.rovrs58QQikRzeNt0saQZg"; //This only works from this website

          var streets = L.tileLayer(
              "https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}", {
                  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                  maxZoom: 18,
                  id: "mapbox/streets-v11",
                  tileSize: 512,
                  zoomOffset: -1,
                  noWrap: true,
                  bounds: bounds,
                  accessToken: accessToken
              }
          );

          var satellite = L.tileLayer(
              "https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}", {
                  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                  maxZoom: 18,
                  id: "mapbox/satellite-v9",
                  tileSize: 512,
                  zoomOffset: -1,
                  noWrap: true,
                  bounds: bounds,
                  accessToken: accessToken
              }
          );

          var baseMaps = {
              "Streets": streets,
              "Satellite": satellite
          };

          streets.addTo(map); //default
          map.doubleClickZoom.disable();
          map.zoomControl.setPosition('topright');

          L.control.layers(baseMaps).addTo(map);

          //Adds all markers to map
          for (var i = 0; i < sporcle.length; i++) {
              //This is the popup when you view an existing spot
              var spotTemplate =
                '<h1>'+sporcle[i].properties.name+'</h1>\
                <p>'+sporcle[i].properties.description+'</p>';

              marker[i] = new L.marker([sporcle[i].geometry.coordinates[0], sporcle[i].geometry.coordinates[1]]).bindPopup(spotTemplate)
                .addTo(map);
          }

          function popupHandler(e) {
            var popUp = e.target.getPopup();
            popUp.getElement()
              .querySelector(".save-button")
              .addEventListener("click", e => {
                spotname = L.DomUtil.get("spotname");
                if (!spotname.value) spotname.value = "Untitled";
                description = L.DomUtil.get("desc");
                if (!description.value) description.value = "No information provided";

                markerPos = marker.getLatLng();

                var newMarker = {
                    "type": "Feature",
                    "properties": {
                        "name": spotname.value,
                        "description": description.value,
                        "tags": [],
                        "likes": 0,              //Tags, likes and dislikes are planned features
                        "dislikes": 0
                    },
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            markerPos.lat,
                            markerPos.lng
                        ]
                    }
                };

                currentZoom = map.getZoom();
                currentPos = map.getCenter();
                currentPos.lat = currentPos.lat.toFixed(3);
                currentPos.lng = currentPos.lng.toFixed(3);
                redirectURL = "/" + currentZoom + "/" + currentPos.lat + "/" + currentPos.lng;

                $.post("/", newMarker, window.location.href = redirectURL); //Sends marker to server and reloads page
            });

            popUp.getElement()
              .querySelector(".delete-button")
              .addEventListener("click", e => {
                marker.remove();
                noMarker = true;
            });
          }

          function onMapClick(e) {
              if (noMarker) { //If there isn't already a new marker being added
                  noMarker = false;
                  marker = L.marker(e.latlng, {
                      opacity: 0.5,
                      draggable: true
                  }).addTo(map);

                  marker.bindPopup(saveSpotTemplate, {
                      autoClose: false,
                      closeButton: false,
                      closeOnClick: false
                  });

                  marker.on("popupopen", popupHandler);

                  marker.openPopup();
              }
          }

          map.on("click", onMapClick);
      </script>
    </div>
  </body>

</html>
